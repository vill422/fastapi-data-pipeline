version: "3.9"
services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.7
    depends_on: [zookeeper]
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports: ["9092:9092"]

  postgres:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: adtrack
      POSTGRES_USER: app
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data

  adminer:
    image: adminer
    ports: ["8080:8080"]

  api:
    build: ./services/api
    depends_on: [kafka, postgres]
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC: ad_events
      DATABASE_URL: postgresql+psycopg://app:postgres@postgres:5432/adtrack
      API_AUTH_TOKEN: devtoken123
    ports: ["8000:8000"]

  consumer:
    build: ./services/consumer
    depends_on: [kafka, postgres]
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC: ad_events
      GROUP_ID: ad-consumers
      DATABASE_URL: postgresql+psycopg://app:postgres@postgres:5432/adtrack

volumes:
  pgdata: